// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kv.proto

#include "kv.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_kv_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kv_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RpcHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kv_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_KvGetRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kv_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_KvGetResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kv_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_KvPutRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kv_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_KvPutResponse;
}  // namespace protobuf_kv_2eproto
namespace RPC {
class RpcHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RpcHeader>
      _instance;
} _RpcHeader_default_instance_;
class KvPutRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KvPutRequest>
      _instance;
} _KvPutRequest_default_instance_;
class KvPutResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KvPutResponse>
      _instance;
} _KvPutResponse_default_instance_;
class KvGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KvGetRequest>
      _instance;
} _KvGetRequest_default_instance_;
class KvGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KvGetResponse>
      _instance;
} _KvGetResponse_default_instance_;
class RpcMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RpcMessage>
      _instance;
  const ::RPC::KvPutRequest* kv_put_request_;
  const ::RPC::KvPutResponse* kv_put_response_;
  const ::RPC::KvGetRequest* kv_get_request_;
  const ::RPC::KvGetResponse* kv_get_response_;
} _RpcMessage_default_instance_;
}  // namespace RPC
namespace protobuf_kv_2eproto {
static void InitDefaultsRpcHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RPC::_RpcHeader_default_instance_;
    new (ptr) ::RPC::RpcHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RPC::RpcHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RpcHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRpcHeader}, {}};

static void InitDefaultsKvPutRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RPC::_KvPutRequest_default_instance_;
    new (ptr) ::RPC::KvPutRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RPC::KvPutRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KvPutRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKvPutRequest}, {
      &protobuf_kv_2eproto::scc_info_RpcHeader.base,}};

static void InitDefaultsKvPutResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RPC::_KvPutResponse_default_instance_;
    new (ptr) ::RPC::KvPutResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RPC::KvPutResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KvPutResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKvPutResponse}, {
      &protobuf_kv_2eproto::scc_info_RpcHeader.base,}};

static void InitDefaultsKvGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RPC::_KvGetRequest_default_instance_;
    new (ptr) ::RPC::KvGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RPC::KvGetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KvGetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKvGetRequest}, {
      &protobuf_kv_2eproto::scc_info_RpcHeader.base,}};

static void InitDefaultsKvGetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RPC::_KvGetResponse_default_instance_;
    new (ptr) ::RPC::KvGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RPC::KvGetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KvGetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKvGetResponse}, {
      &protobuf_kv_2eproto::scc_info_RpcHeader.base,}};

static void InitDefaultsRpcMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::RPC::_RpcMessage_default_instance_;
    new (ptr) ::RPC::RpcMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RPC::RpcMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_RpcMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsRpcMessage}, {
      &protobuf_kv_2eproto::scc_info_KvPutRequest.base,
      &protobuf_kv_2eproto::scc_info_KvPutResponse.base,
      &protobuf_kv_2eproto::scc_info_KvGetRequest.base,
      &protobuf_kv_2eproto::scc_info_KvGetResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RpcHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KvPutRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KvPutResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KvGetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KvGetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RpcMessage.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::RpcHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::RpcHeader, magic_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::RpcHeader, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::RpcHeader, message_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvPutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvPutRequest, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvPutRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvPutRequest, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvPutRequest, vlen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvPutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvPutResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvPutResponse, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvGetRequest, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvGetRequest, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvGetResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvGetResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvGetResponse, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::KvGetResponse, vlen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::RpcMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::RpcMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::RPC::RpcMessageDefaultTypeInternal, kv_put_request_),
  offsetof(::RPC::RpcMessageDefaultTypeInternal, kv_put_response_),
  offsetof(::RPC::RpcMessageDefaultTypeInternal, kv_get_request_),
  offsetof(::RPC::RpcMessageDefaultTypeInternal, kv_get_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RPC::RpcMessage, message_type_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::RPC::RpcHeader)},
  { 8, -1, sizeof(::RPC::KvPutRequest)},
  { 17, -1, sizeof(::RPC::KvPutResponse)},
  { 24, -1, sizeof(::RPC::KvGetRequest)},
  { 31, -1, sizeof(::RPC::KvGetResponse)},
  { 40, -1, sizeof(::RPC::RpcMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::RPC::_RpcHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RPC::_KvPutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RPC::_KvPutResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RPC::_KvGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RPC::_KvGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::RPC::_RpcMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "kv.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010kv.proto\022\003RPC\"F\n\tRpcHeader\022\024\n\014magic_nu"
      "mber\030\001 \001(\r\022\017\n\007version\030\002 \001(\r\022\022\n\nmessage_i"
      "d\030\003 \001(\004\"X\n\014KvPutRequest\022\036\n\006header\030\001 \001(\0132"
      "\016.RPC.RpcHeader\022\013\n\003key\030\002 \001(\005\022\r\n\005value\030\003 "
      "\001(\014\022\014\n\004vlen\030\004 \001(\r\"\?\n\rKvPutResponse\022\036\n\006he"
      "ader\030\001 \001(\0132\016.RPC.RpcHeader\022\016\n\006status\030\002 \001"
      "(\010\";\n\014KvGetRequest\022\036\n\006header\030\001 \001(\0132\016.RPC"
      ".RpcHeader\022\013\n\003key\030\002 \001(\005\"\\\n\rKvGetResponse"
      "\022\036\n\006header\030\001 \001(\0132\016.RPC.RpcHeader\022\016\n\006stat"
      "us\030\002 \001(\010\022\r\n\005value\030\003 \001(\014\022\014\n\004vlen\030\004 \001(\r\"\324\001"
      "\n\nRpcMessage\022+\n\016kv_put_request\030\001 \001(\0132\021.R"
      "PC.KvPutRequestH\000\022-\n\017kv_put_response\030\002 \001"
      "(\0132\022.RPC.KvPutResponseH\000\022+\n\016kv_get_reque"
      "st\030\003 \001(\0132\021.RPC.KvGetRequestH\000\022-\n\017kv_get_"
      "response\030\004 \001(\0132\022.RPC.KvGetResponseH\000B\016\n\014"
      "message_typeb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 620);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "kv.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_kv_2eproto
namespace RPC {

// ===================================================================

void RpcHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcHeader::kMagicNumberFieldNumber;
const int RpcHeader::kVersionFieldNumber;
const int RpcHeader::kMessageIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcHeader::RpcHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kv_2eproto::scc_info_RpcHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPC.RpcHeader)
}
RpcHeader::RpcHeader(const RpcHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&magic_number_, &from.magic_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&message_id_) -
    reinterpret_cast<char*>(&magic_number_)) + sizeof(message_id_));
  // @@protoc_insertion_point(copy_constructor:RPC.RpcHeader)
}

void RpcHeader::SharedCtor() {
  ::memset(&magic_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&message_id_) -
      reinterpret_cast<char*>(&magic_number_)) + sizeof(message_id_));
}

RpcHeader::~RpcHeader() {
  // @@protoc_insertion_point(destructor:RPC.RpcHeader)
  SharedDtor();
}

void RpcHeader::SharedDtor() {
}

void RpcHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RpcHeader::descriptor() {
  ::protobuf_kv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpcHeader& RpcHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kv_2eproto::scc_info_RpcHeader.base);
  return *internal_default_instance();
}


void RpcHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:RPC.RpcHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&magic_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&message_id_) -
      reinterpret_cast<char*>(&magic_number_)) + sizeof(message_id_));
  _internal_metadata_.Clear();
}

bool RpcHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPC.RpcHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 magic_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &magic_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 message_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &message_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPC.RpcHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPC.RpcHeader)
  return false;
#undef DO_
}

void RpcHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPC.RpcHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic_number = 1;
  if (this->magic_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->magic_number(), output);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // uint64 message_id = 3;
  if (this->message_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->message_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RPC.RpcHeader)
}

::google::protobuf::uint8* RpcHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RPC.RpcHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic_number = 1;
  if (this->magic_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->magic_number(), target);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // uint64 message_id = 3;
  if (this->message_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->message_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RPC.RpcHeader)
  return target;
}

size_t RpcHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPC.RpcHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 magic_number = 1;
  if (this->magic_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->magic_number());
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint64 message_id = 3;
  if (this->message_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->message_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RpcHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPC.RpcHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPC.RpcHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPC.RpcHeader)
    MergeFrom(*source);
  }
}

void RpcHeader::MergeFrom(const RpcHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPC.RpcHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.magic_number() != 0) {
    set_magic_number(from.magic_number());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.message_id() != 0) {
    set_message_id(from.message_id());
  }
}

void RpcHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPC.RpcHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcHeader::CopyFrom(const RpcHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPC.RpcHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcHeader::IsInitialized() const {
  return true;
}

void RpcHeader::Swap(RpcHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcHeader::InternalSwap(RpcHeader* other) {
  using std::swap;
  swap(magic_number_, other->magic_number_);
  swap(version_, other->version_);
  swap(message_id_, other->message_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RpcHeader::GetMetadata() const {
  protobuf_kv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KvPutRequest::InitAsDefaultInstance() {
  ::RPC::_KvPutRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::RPC::RpcHeader*>(
      ::RPC::RpcHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KvPutRequest::kHeaderFieldNumber;
const int KvPutRequest::kKeyFieldNumber;
const int KvPutRequest::kValueFieldNumber;
const int KvPutRequest::kVlenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KvPutRequest::KvPutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kv_2eproto::scc_info_KvPutRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPC.KvPutRequest)
}
KvPutRequest::KvPutRequest(const KvPutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_header()) {
    header_ = new ::RPC::RpcHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&key_, &from.key_,
    static_cast<size_t>(reinterpret_cast<char*>(&vlen_) -
    reinterpret_cast<char*>(&key_)) + sizeof(vlen_));
  // @@protoc_insertion_point(copy_constructor:RPC.KvPutRequest)
}

void KvPutRequest::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vlen_) -
      reinterpret_cast<char*>(&header_)) + sizeof(vlen_));
}

KvPutRequest::~KvPutRequest() {
  // @@protoc_insertion_point(destructor:RPC.KvPutRequest)
  SharedDtor();
}

void KvPutRequest::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void KvPutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KvPutRequest::descriptor() {
  ::protobuf_kv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KvPutRequest& KvPutRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kv_2eproto::scc_info_KvPutRequest.base);
  return *internal_default_instance();
}


void KvPutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RPC.KvPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vlen_) -
      reinterpret_cast<char*>(&key_)) + sizeof(vlen_));
  _internal_metadata_.Clear();
}

bool KvPutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPC.KvPutRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RPC.RpcHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vlen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPC.KvPutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPC.KvPutRequest)
  return false;
#undef DO_
}

void KvPutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPC.KvPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RPC.RpcHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // int32 key = 2;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->key(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  // uint32 vlen = 4;
  if (this->vlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->vlen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RPC.KvPutRequest)
}

::google::protobuf::uint8* KvPutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RPC.KvPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RPC.RpcHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // int32 key = 2;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->key(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  // uint32 vlen = 4;
  if (this->vlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->vlen(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RPC.KvPutRequest)
  return target;
}

size_t KvPutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPC.KvPutRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .RPC.RpcHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // int32 key = 2;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  // uint32 vlen = 4;
  if (this->vlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KvPutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPC.KvPutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const KvPutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KvPutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPC.KvPutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPC.KvPutRequest)
    MergeFrom(*source);
  }
}

void KvPutRequest::MergeFrom(const KvPutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPC.KvPutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_header()) {
    mutable_header()->::RPC::RpcHeader::MergeFrom(from.header());
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
  if (from.vlen() != 0) {
    set_vlen(from.vlen());
  }
}

void KvPutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPC.KvPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KvPutRequest::CopyFrom(const KvPutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPC.KvPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KvPutRequest::IsInitialized() const {
  return true;
}

void KvPutRequest::Swap(KvPutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KvPutRequest::InternalSwap(KvPutRequest* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(key_, other->key_);
  swap(vlen_, other->vlen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KvPutRequest::GetMetadata() const {
  protobuf_kv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KvPutResponse::InitAsDefaultInstance() {
  ::RPC::_KvPutResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::RPC::RpcHeader*>(
      ::RPC::RpcHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KvPutResponse::kHeaderFieldNumber;
const int KvPutResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KvPutResponse::KvPutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kv_2eproto::scc_info_KvPutResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPC.KvPutResponse)
}
KvPutResponse::KvPutResponse(const KvPutResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::RPC::RpcHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:RPC.KvPutResponse)
}

void KvPutResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(status_));
}

KvPutResponse::~KvPutResponse() {
  // @@protoc_insertion_point(destructor:RPC.KvPutResponse)
  SharedDtor();
}

void KvPutResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void KvPutResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KvPutResponse::descriptor() {
  ::protobuf_kv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KvPutResponse& KvPutResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kv_2eproto::scc_info_KvPutResponse.base);
  return *internal_default_instance();
}


void KvPutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RPC.KvPutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  status_ = false;
  _internal_metadata_.Clear();
}

bool KvPutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPC.KvPutResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RPC.RpcHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPC.KvPutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPC.KvPutResponse)
  return false;
#undef DO_
}

void KvPutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPC.KvPutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RPC.RpcHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // bool status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RPC.KvPutResponse)
}

::google::protobuf::uint8* KvPutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RPC.KvPutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RPC.RpcHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // bool status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RPC.KvPutResponse)
  return target;
}

size_t KvPutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPC.KvPutResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .RPC.RpcHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // bool status = 2;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KvPutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPC.KvPutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const KvPutResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KvPutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPC.KvPutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPC.KvPutResponse)
    MergeFrom(*source);
  }
}

void KvPutResponse::MergeFrom(const KvPutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPC.KvPutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::RPC::RpcHeader::MergeFrom(from.header());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void KvPutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPC.KvPutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KvPutResponse::CopyFrom(const KvPutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPC.KvPutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KvPutResponse::IsInitialized() const {
  return true;
}

void KvPutResponse::Swap(KvPutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KvPutResponse::InternalSwap(KvPutResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KvPutResponse::GetMetadata() const {
  protobuf_kv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KvGetRequest::InitAsDefaultInstance() {
  ::RPC::_KvGetRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::RPC::RpcHeader*>(
      ::RPC::RpcHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KvGetRequest::kHeaderFieldNumber;
const int KvGetRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KvGetRequest::KvGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kv_2eproto::scc_info_KvGetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPC.KvGetRequest)
}
KvGetRequest::KvGetRequest(const KvGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::RPC::RpcHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  key_ = from.key_;
  // @@protoc_insertion_point(copy_constructor:RPC.KvGetRequest)
}

void KvGetRequest::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&header_)) + sizeof(key_));
}

KvGetRequest::~KvGetRequest() {
  // @@protoc_insertion_point(destructor:RPC.KvGetRequest)
  SharedDtor();
}

void KvGetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void KvGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KvGetRequest::descriptor() {
  ::protobuf_kv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KvGetRequest& KvGetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kv_2eproto::scc_info_KvGetRequest.base);
  return *internal_default_instance();
}


void KvGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RPC.KvGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  key_ = 0;
  _internal_metadata_.Clear();
}

bool KvGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPC.KvGetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RPC.RpcHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPC.KvGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPC.KvGetRequest)
  return false;
#undef DO_
}

void KvGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPC.KvGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RPC.RpcHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // int32 key = 2;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RPC.KvGetRequest)
}

::google::protobuf::uint8* KvGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RPC.KvGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RPC.RpcHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // int32 key = 2;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RPC.KvGetRequest)
  return target;
}

size_t KvGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPC.KvGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .RPC.RpcHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // int32 key = 2;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KvGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPC.KvGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const KvGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KvGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPC.KvGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPC.KvGetRequest)
    MergeFrom(*source);
  }
}

void KvGetRequest::MergeFrom(const KvGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPC.KvGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::RPC::RpcHeader::MergeFrom(from.header());
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
}

void KvGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPC.KvGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KvGetRequest::CopyFrom(const KvGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPC.KvGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KvGetRequest::IsInitialized() const {
  return true;
}

void KvGetRequest::Swap(KvGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KvGetRequest::InternalSwap(KvGetRequest* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KvGetRequest::GetMetadata() const {
  protobuf_kv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KvGetResponse::InitAsDefaultInstance() {
  ::RPC::_KvGetResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::RPC::RpcHeader*>(
      ::RPC::RpcHeader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KvGetResponse::kHeaderFieldNumber;
const int KvGetResponse::kStatusFieldNumber;
const int KvGetResponse::kValueFieldNumber;
const int KvGetResponse::kVlenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KvGetResponse::KvGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kv_2eproto::scc_info_KvGetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPC.KvGetResponse)
}
KvGetResponse::KvGetResponse(const KvGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_header()) {
    header_ = new ::RPC::RpcHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&vlen_) -
    reinterpret_cast<char*>(&status_)) + sizeof(vlen_));
  // @@protoc_insertion_point(copy_constructor:RPC.KvGetResponse)
}

void KvGetResponse::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vlen_) -
      reinterpret_cast<char*>(&header_)) + sizeof(vlen_));
}

KvGetResponse::~KvGetResponse() {
  // @@protoc_insertion_point(destructor:RPC.KvGetResponse)
  SharedDtor();
}

void KvGetResponse::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void KvGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KvGetResponse::descriptor() {
  ::protobuf_kv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KvGetResponse& KvGetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kv_2eproto::scc_info_KvGetResponse.base);
  return *internal_default_instance();
}


void KvGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RPC.KvGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vlen_) -
      reinterpret_cast<char*>(&status_)) + sizeof(vlen_));
  _internal_metadata_.Clear();
}

bool KvGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPC.KvGetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RPC.RpcHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vlen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPC.KvGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPC.KvGetResponse)
  return false;
#undef DO_
}

void KvGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPC.KvGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RPC.RpcHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // bool status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->status(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  // uint32 vlen = 4;
  if (this->vlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->vlen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RPC.KvGetResponse)
}

::google::protobuf::uint8* KvGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RPC.KvGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RPC.RpcHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // bool status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->status(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  // uint32 vlen = 4;
  if (this->vlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->vlen(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RPC.KvGetResponse)
  return target;
}

size_t KvGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPC.KvGetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .RPC.RpcHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // bool status = 2;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  // uint32 vlen = 4;
  if (this->vlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KvGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPC.KvGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const KvGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KvGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPC.KvGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPC.KvGetResponse)
    MergeFrom(*source);
  }
}

void KvGetResponse::MergeFrom(const KvGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPC.KvGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_header()) {
    mutable_header()->::RPC::RpcHeader::MergeFrom(from.header());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.vlen() != 0) {
    set_vlen(from.vlen());
  }
}

void KvGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPC.KvGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KvGetResponse::CopyFrom(const KvGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPC.KvGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KvGetResponse::IsInitialized() const {
  return true;
}

void KvGetResponse::Swap(KvGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KvGetResponse::InternalSwap(KvGetResponse* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(status_, other->status_);
  swap(vlen_, other->vlen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KvGetResponse::GetMetadata() const {
  protobuf_kv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RpcMessage::InitAsDefaultInstance() {
  ::RPC::_RpcMessage_default_instance_.kv_put_request_ = const_cast< ::RPC::KvPutRequest*>(
      ::RPC::KvPutRequest::internal_default_instance());
  ::RPC::_RpcMessage_default_instance_.kv_put_response_ = const_cast< ::RPC::KvPutResponse*>(
      ::RPC::KvPutResponse::internal_default_instance());
  ::RPC::_RpcMessage_default_instance_.kv_get_request_ = const_cast< ::RPC::KvGetRequest*>(
      ::RPC::KvGetRequest::internal_default_instance());
  ::RPC::_RpcMessage_default_instance_.kv_get_response_ = const_cast< ::RPC::KvGetResponse*>(
      ::RPC::KvGetResponse::internal_default_instance());
}
void RpcMessage::set_allocated_kv_put_request(::RPC::KvPutRequest* kv_put_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message_type();
  if (kv_put_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      kv_put_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, kv_put_request, submessage_arena);
    }
    set_has_kv_put_request();
    message_type_.kv_put_request_ = kv_put_request;
  }
  // @@protoc_insertion_point(field_set_allocated:RPC.RpcMessage.kv_put_request)
}
void RpcMessage::set_allocated_kv_put_response(::RPC::KvPutResponse* kv_put_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message_type();
  if (kv_put_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      kv_put_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, kv_put_response, submessage_arena);
    }
    set_has_kv_put_response();
    message_type_.kv_put_response_ = kv_put_response;
  }
  // @@protoc_insertion_point(field_set_allocated:RPC.RpcMessage.kv_put_response)
}
void RpcMessage::set_allocated_kv_get_request(::RPC::KvGetRequest* kv_get_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message_type();
  if (kv_get_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      kv_get_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, kv_get_request, submessage_arena);
    }
    set_has_kv_get_request();
    message_type_.kv_get_request_ = kv_get_request;
  }
  // @@protoc_insertion_point(field_set_allocated:RPC.RpcMessage.kv_get_request)
}
void RpcMessage::set_allocated_kv_get_response(::RPC::KvGetResponse* kv_get_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message_type();
  if (kv_get_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      kv_get_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, kv_get_response, submessage_arena);
    }
    set_has_kv_get_response();
    message_type_.kv_get_response_ = kv_get_response;
  }
  // @@protoc_insertion_point(field_set_allocated:RPC.RpcMessage.kv_get_response)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcMessage::kKvPutRequestFieldNumber;
const int RpcMessage::kKvPutResponseFieldNumber;
const int RpcMessage::kKvGetRequestFieldNumber;
const int RpcMessage::kKvGetResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcMessage::RpcMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kv_2eproto::scc_info_RpcMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RPC.RpcMessage)
}
RpcMessage::RpcMessage(const RpcMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_message_type();
  switch (from.message_type_case()) {
    case kKvPutRequest: {
      mutable_kv_put_request()->::RPC::KvPutRequest::MergeFrom(from.kv_put_request());
      break;
    }
    case kKvPutResponse: {
      mutable_kv_put_response()->::RPC::KvPutResponse::MergeFrom(from.kv_put_response());
      break;
    }
    case kKvGetRequest: {
      mutable_kv_get_request()->::RPC::KvGetRequest::MergeFrom(from.kv_get_request());
      break;
    }
    case kKvGetResponse: {
      mutable_kv_get_response()->::RPC::KvGetResponse::MergeFrom(from.kv_get_response());
      break;
    }
    case MESSAGE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:RPC.RpcMessage)
}

void RpcMessage::SharedCtor() {
  clear_has_message_type();
}

RpcMessage::~RpcMessage() {
  // @@protoc_insertion_point(destructor:RPC.RpcMessage)
  SharedDtor();
}

void RpcMessage::SharedDtor() {
  if (has_message_type()) {
    clear_message_type();
  }
}

void RpcMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RpcMessage::descriptor() {
  ::protobuf_kv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kv_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpcMessage& RpcMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kv_2eproto::scc_info_RpcMessage.base);
  return *internal_default_instance();
}


void RpcMessage::clear_message_type() {
// @@protoc_insertion_point(one_of_clear_start:RPC.RpcMessage)
  switch (message_type_case()) {
    case kKvPutRequest: {
      delete message_type_.kv_put_request_;
      break;
    }
    case kKvPutResponse: {
      delete message_type_.kv_put_response_;
      break;
    }
    case kKvGetRequest: {
      delete message_type_.kv_get_request_;
      break;
    }
    case kKvGetResponse: {
      delete message_type_.kv_get_response_;
      break;
    }
    case MESSAGE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_TYPE_NOT_SET;
}


void RpcMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:RPC.RpcMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message_type();
  _internal_metadata_.Clear();
}

bool RpcMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RPC.RpcMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RPC.KvPutRequest kv_put_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kv_put_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RPC.KvPutResponse kv_put_response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kv_put_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RPC.KvGetRequest kv_get_request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kv_get_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RPC.KvGetResponse kv_get_response = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kv_get_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RPC.RpcMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RPC.RpcMessage)
  return false;
#undef DO_
}

void RpcMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RPC.RpcMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RPC.KvPutRequest kv_put_request = 1;
  if (has_kv_put_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_kv_put_request(), output);
  }

  // .RPC.KvPutResponse kv_put_response = 2;
  if (has_kv_put_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_kv_put_response(), output);
  }

  // .RPC.KvGetRequest kv_get_request = 3;
  if (has_kv_get_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_kv_get_request(), output);
  }

  // .RPC.KvGetResponse kv_get_response = 4;
  if (has_kv_get_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_kv_get_response(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RPC.RpcMessage)
}

::google::protobuf::uint8* RpcMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RPC.RpcMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RPC.KvPutRequest kv_put_request = 1;
  if (has_kv_put_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_kv_put_request(), deterministic, target);
  }

  // .RPC.KvPutResponse kv_put_response = 2;
  if (has_kv_put_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_kv_put_response(), deterministic, target);
  }

  // .RPC.KvGetRequest kv_get_request = 3;
  if (has_kv_get_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_kv_get_request(), deterministic, target);
  }

  // .RPC.KvGetResponse kv_get_response = 4;
  if (has_kv_get_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_kv_get_response(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RPC.RpcMessage)
  return target;
}

size_t RpcMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RPC.RpcMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (message_type_case()) {
    // .RPC.KvPutRequest kv_put_request = 1;
    case kKvPutRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_type_.kv_put_request_);
      break;
    }
    // .RPC.KvPutResponse kv_put_response = 2;
    case kKvPutResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_type_.kv_put_response_);
      break;
    }
    // .RPC.KvGetRequest kv_get_request = 3;
    case kKvGetRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_type_.kv_get_request_);
      break;
    }
    // .RPC.KvGetResponse kv_get_response = 4;
    case kKvGetResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_type_.kv_get_response_);
      break;
    }
    case MESSAGE_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RpcMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RPC.RpcMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RPC.RpcMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RPC.RpcMessage)
    MergeFrom(*source);
  }
}

void RpcMessage::MergeFrom(const RpcMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RPC.RpcMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_type_case()) {
    case kKvPutRequest: {
      mutable_kv_put_request()->::RPC::KvPutRequest::MergeFrom(from.kv_put_request());
      break;
    }
    case kKvPutResponse: {
      mutable_kv_put_response()->::RPC::KvPutResponse::MergeFrom(from.kv_put_response());
      break;
    }
    case kKvGetRequest: {
      mutable_kv_get_request()->::RPC::KvGetRequest::MergeFrom(from.kv_get_request());
      break;
    }
    case kKvGetResponse: {
      mutable_kv_get_response()->::RPC::KvGetResponse::MergeFrom(from.kv_get_response());
      break;
    }
    case MESSAGE_TYPE_NOT_SET: {
      break;
    }
  }
}

void RpcMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RPC.RpcMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcMessage::CopyFrom(const RpcMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RPC.RpcMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcMessage::IsInitialized() const {
  return true;
}

void RpcMessage::Swap(RpcMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcMessage::InternalSwap(RpcMessage* other) {
  using std::swap;
  swap(message_type_, other->message_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RpcMessage::GetMetadata() const {
  protobuf_kv_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kv_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace RPC
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RPC::RpcHeader* Arena::CreateMaybeMessage< ::RPC::RpcHeader >(Arena* arena) {
  return Arena::CreateInternal< ::RPC::RpcHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RPC::KvPutRequest* Arena::CreateMaybeMessage< ::RPC::KvPutRequest >(Arena* arena) {
  return Arena::CreateInternal< ::RPC::KvPutRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RPC::KvPutResponse* Arena::CreateMaybeMessage< ::RPC::KvPutResponse >(Arena* arena) {
  return Arena::CreateInternal< ::RPC::KvPutResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RPC::KvGetRequest* Arena::CreateMaybeMessage< ::RPC::KvGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::RPC::KvGetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RPC::KvGetResponse* Arena::CreateMaybeMessage< ::RPC::KvGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::RPC::KvGetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RPC::RpcMessage* Arena::CreateMaybeMessage< ::RPC::RpcMessage >(Arena* arena) {
  return Arena::CreateInternal< ::RPC::RpcMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
